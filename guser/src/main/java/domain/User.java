package domain;

// Generated 2016-6-1 14:59:12 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "blog_user", uniqueConstraints = @UniqueConstraint(columnNames = "username"))
public class User implements java.io.Serializable {

	private Integer userId;
	private String username;
	private boolean anonymous;
	private boolean deleted;
	private Userstate userstate;
	private Userdetail userdetail;
	private Set<Role> roles = new HashSet<Role>(0);

	public User() {
	}

	public User(String username, boolean anonymous, boolean deleted) {
		this.username = username;
		this.anonymous = anonymous;
		this.deleted = deleted;
	}

	public User(String username, boolean anonymous, boolean deleted,
			Userstate userstate, Userdetail userdetail, Set<Role> roles) {
		this.username = username;
		this.anonymous = anonymous;
		this.deleted = deleted;
		this.userstate = userstate;
		this.userdetail = userdetail;
		this.roles = roles;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "userId", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "username", unique = true, nullable = false, length = 128)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "anonymous", nullable = false)
	public boolean isAnonymous() {
		return this.anonymous;
	}

	public void setAnonymous(boolean anonymous) {
		this.anonymous = anonymous;
	}

	@JsonIgnore
	@Column(name = "deleted", nullable = false)
	public boolean isDeleted() {
		return this.deleted;
	}

	public void setDeleted(boolean deleted) {
		this.deleted = deleted;
	}

	@JsonIgnore
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "user")
	public Userstate getUserstate() {
		return this.userstate;
	}

	public void setUserstate(Userstate userstate) {
		this.userstate = userstate;
	}

	@JsonIgnore
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "user")
	public Userdetail getUserdetail() {
		return this.userdetail;
	}

	public void setUserdetail(Userdetail userdetail) {
		this.userdetail = userdetail;
	}

	@JsonIgnore
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "userinrole", catalog = "blog_user", joinColumns = { @JoinColumn(name = "userId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "roleId", nullable = false, updatable = false) })
	public Set<Role> getRoles() {
		return this.roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}

	@Override
	public String toString() {
		return "User [userId=" + userId + ", username=" + username
				+ ", anonymous=" + anonymous + ", deleted=" + deleted
				+ ",\n userstate=" + userstate + ", \n userdetail=" + userdetail
				+ "]";
	}

	
}
